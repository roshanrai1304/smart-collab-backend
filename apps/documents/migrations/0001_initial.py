# Generated by Django 5.2.6 on 2025-09-22 12:50

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organizations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField(blank=True)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Document"),
                            ("markdown", "Markdown"),
                            ("rich_text", "Rich Text"),
                        ],
                        default="text",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Public documents are visible to all team members",
                    ),
                ),
                ("word_count", models.PositiveIntegerField(default=0)),
                ("character_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of tags for categorization",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional document metadata",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="organizations.team",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "documents",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="DocumentComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "position_start",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Start position in document content",
                        null=True,
                    ),
                ),
                (
                    "position_end",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="End position in document content",
                        null=True,
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        default=False, help_text="Mark comment as resolved"
                    ),
                ),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="documents.document",
                    ),
                ),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="documents.documentcomment",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "document_comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="DocumentPermission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("read", "Read Only"),
                            ("write", "Read & Write"),
                            ("admin", "Admin"),
                        ],
                        max_length=10,
                    ),
                ),
                ("granted_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notes about this permission grant"
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permissions",
                        to="documents.document",
                    ),
                ),
                (
                    "granted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="granted_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "document_permissions",
            },
        ),
        migrations.CreateModel(
            name="DocumentVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("version_number", models.PositiveIntegerField()),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                (
                    "change_summary",
                    models.TextField(
                        blank=True, help_text="Summary of changes in this version"
                    ),
                ),
                ("word_count", models.PositiveIntegerField(default=0)),
                ("character_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="documents.document",
                    ),
                ),
            ],
            options={
                "db_table": "document_versions",
                "ordering": ["-version_number"],
            },
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["team", "status"], name="idx_doc_team_status"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["created_by"], name="idx_doc_created_by"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(fields=["updated_at"], name="idx_doc_updated_at"),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["team", "is_public"], name="idx_doc_team_public"
            ),
        ),
        migrations.AddIndex(
            model_name="documentcomment",
            index=models.Index(
                fields=["document", "created_at"], name="idx_comm_doc_time"
            ),
        ),
        migrations.AddIndex(
            model_name="documentcomment",
            index=models.Index(fields=["user"], name="idx_comm_user"),
        ),
        migrations.AddIndex(
            model_name="documentcomment",
            index=models.Index(fields=["parent_comment"], name="idx_comm_parent"),
        ),
        migrations.AddIndex(
            model_name="documentcomment",
            index=models.Index(fields=["is_resolved"], name="idx_comm_resolved"),
        ),
        migrations.AddIndex(
            model_name="documentpermission",
            index=models.Index(fields=["document", "user"], name="idx_perm_doc_user"),
        ),
        migrations.AddIndex(
            model_name="documentpermission",
            index=models.Index(fields=["user"], name="idx_perm_user"),
        ),
        migrations.AddIndex(
            model_name="documentpermission",
            index=models.Index(fields=["granted_by"], name="idx_perm_granted_by"),
        ),
        migrations.AlterUniqueTogether(
            name="documentpermission",
            unique_together={("document", "user")},
        ),
        migrations.AddIndex(
            model_name="documentversion",
            index=models.Index(
                fields=["document", "version_number"], name="idx_ver_doc_num"
            ),
        ),
        migrations.AddIndex(
            model_name="documentversion",
            index=models.Index(fields=["created_by"], name="idx_ver_created_by"),
        ),
        migrations.AddIndex(
            model_name="documentversion",
            index=models.Index(fields=["created_at"], name="idx_ver_created_at"),
        ),
        migrations.AlterUniqueTogether(
            name="documentversion",
            unique_together={("document", "version_number")},
        ),
    ]
