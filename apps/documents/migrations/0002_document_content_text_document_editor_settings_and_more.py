# Generated by Django 5.2.6 on 2025-09-26 13:04

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import apps.documents.models


class Migration(migrations.Migration):

    dependencies = [
        ("documents", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="document",
            name="content_text",
            field=models.TextField(
                blank=True,
                help_text="Plain text version of content for search and indexing",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="editor_settings",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Editor-specific settings (theme, plugins, etc.)",
            ),
        ),
        migrations.AddField(
            model_name="document",
            name="media_count",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of media attachments"
            ),
        ),
        migrations.AddField(
            model_name="documentversion",
            name="content_text",
            field=models.TextField(
                blank=True, help_text="Plain text version for this snapshot"
            ),
        ),
        migrations.AlterField(
            model_name="document",
            name="content",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Rich content stored as JSON (supports text, formatting, media, etc.)",
            ),
        ),
        migrations.AlterField(
            model_name="document",
            name="document_type",
            field=models.CharField(
                choices=[
                    ("text", "Plain Text"),
                    ("markdown", "Markdown"),
                    ("rich_text", "Rich Text Editor"),
                    ("wysiwyg", "WYSIWYG Editor"),
                ],
                default="text",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="document",
            name="status",
            field=models.CharField(
                choices=[
                    ("draft", "Draft"),
                    ("published", "Published"),
                    ("archived", "Archived"),
                    ("template", "Template"),
                ],
                default="draft",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="documentversion",
            name="content",
            field=models.JSONField(
                default=dict, help_text="Rich content snapshot at this version"
            ),
        ),
        migrations.CreateModel(
            name="DocumentMedia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=apps.documents.models.document_media_path
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("spreadsheet", "Spreadsheet"),
                            ("presentation", "Presentation"),
                            ("pdf", "PDF"),
                            ("archive", "Archive"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "usage_type",
                    models.CharField(
                        choices=[
                            ("inline", "Inline Content"),
                            ("attachment", "File Attachment"),
                            ("background", "Background/Cover"),
                            ("thumbnail", "Thumbnail"),
                        ],
                        default="attachment",
                        max_length=20,
                    ),
                ),
                (
                    "position_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Position and styling data for inline media",
                    ),
                ),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "duration",
                    models.FloatField(
                        blank=True,
                        help_text="Duration in seconds for video/audio",
                        null=True,
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alt text for accessibility",
                        max_length=255,
                    ),
                ),
                ("caption", models.TextField(blank=True, help_text="Media caption")),
                (
                    "uploaded_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "is_processed",
                    models.BooleanField(
                        default=False, help_text="Whether media processing is complete"
                    ),
                ),
                (
                    "processing_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Processing status and metadata",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_attachments",
                        to="documents.document",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="uploaded_media",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "document_media",
                "ordering": ["-uploaded_at"],
                "indexes": [
                    models.Index(
                        fields=["document", "media_type"], name="idx_media_doc_type"
                    ),
                    models.Index(
                        fields=["document", "usage_type"], name="idx_media_doc_usage"
                    ),
                    models.Index(fields=["uploaded_by"], name="idx_media_uploader"),
                ],
            },
        ),
    ]
