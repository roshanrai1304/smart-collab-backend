# Generated by Django 5.2.6 on 2025-09-18 10:10

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('domain', models.CharField(blank=True, help_text="Email domain for auto-join (e.g., 'company.com')", max_length=255, null=True)),
                ('description', models.TextField(blank=True)),
                ('logo_url', models.URLField(blank=True, max_length=500, null=True)),
                ('settings', models.JSONField(blank=True, default=dict, help_text='Organization-specific settings and preferences')),
                ('subscription_plan', models.CharField(choices=[('free', 'Free'), ('pro', 'Pro'), ('enterprise', 'Enterprise')], default='free', max_length=50)),
                ('subscription_status', models.CharField(choices=[('active', 'Active'), ('trial', 'Trial'), ('expired', 'Expired'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('max_members', models.PositiveIntegerField(default=10)),
                ('max_documents', models.PositiveIntegerField(default=100)),
                ('max_storage_gb', models.PositiveIntegerField(default=5)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('member', 'Member')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('invited', 'Invited'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('invited_at', models.DateTimeField(blank=True, null=True)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_org_invitations', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='organizations.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organization_memberships',
                'ordering': ['organization', 'role', 'user__username'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for UI display', max_length=7)),
                ('settings', models.JSONField(blank=True, default=dict, help_text='Team-specific settings and preferences')),
                ('is_default', models.BooleanField(default=False, help_text='Default team for new organization members')),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_teams', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='organizations.organization')),
            ],
            options={
                'db_table': 'teams',
                'ordering': ['organization', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('lead', 'Team Lead'), ('editor', 'Editor'), ('viewer', 'Viewer')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('invited', 'Invited')], default='active', max_length=20)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_team_invitations', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='organizations.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'team_memberships',
                'ordering': ['team', 'role', 'user__username'],
            },
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['slug'], name='idx_org_slug'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['domain'], name='idx_org_domain'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['created_by'], name='idx_org_created_by'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['subscription_plan', 'subscription_status'], name='idx_org_subscription'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['-created_at'], name='idx_org_created_at'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['organization', 'user'], name='idx_org_mem_org_user'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['user'], name='idx_org_mem_user'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['organization', 'role'], name='idx_org_mem_role'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['organization', 'status'], name='idx_org_mem_status'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['-last_accessed'], name='idx_org_mem_last_accessed'),
        ),
        migrations.AddIndex(
            model_name='organizationmembership',
            index=models.Index(fields=['-created_at'], name='idx_org_mem_created_at'),
        ),
        migrations.AlterUniqueTogether(
            name='organizationmembership',
            unique_together={('organization', 'user')},
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['organization'], name='idx_team_organization'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['organization', 'slug'], name='idx_team_org_slug'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['created_by'], name='idx_team_created_by'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['organization', 'is_default'], name='idx_team_is_default'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['organization', 'is_archived'], name='idx_team_is_archived'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['-created_at'], name='idx_team_created_at'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('organization', 'slug')},
        ),
        migrations.AddIndex(
            model_name='teammembership',
            index=models.Index(fields=['team', 'user'], name='idx_team_mem_team_user'),
        ),
        migrations.AddIndex(
            model_name='teammembership',
            index=models.Index(fields=['user'], name='idx_team_mem_user'),
        ),
        migrations.AddIndex(
            model_name='teammembership',
            index=models.Index(fields=['team', 'role'], name='idx_team_mem_role'),
        ),
        migrations.AddIndex(
            model_name='teammembership',
            index=models.Index(fields=['team', 'status'], name='idx_team_mem_status'),
        ),
        migrations.AddIndex(
            model_name='teammembership',
            index=models.Index(fields=['-created_at'], name='idx_team_mem_created_at'),
        ),
        migrations.AlterUniqueTogether(
            name='teammembership',
            unique_together={('team', 'user')},
        ),
    ]
