# Generated by Django 5.2.6 on 2025-09-23 12:30

import datetime
import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("documents", "0001_initial"),
        ("organizations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CollaborationRoom",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Room display name", max_length=255),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Room description"),
                ),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("document", "Document Editing"),
                            ("discussion", "Discussion"),
                            ("review", "Review Session"),
                            ("presentation", "Presentation"),
                        ],
                        default="document",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Public rooms are visible to all team members",
                    ),
                ),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        default=50, help_text="Maximum concurrent participants"
                    ),
                ),
                (
                    "allow_anonymous",
                    models.BooleanField(
                        default=False, help_text="Allow anonymous participants"
                    ),
                ),
                (
                    "enable_voice",
                    models.BooleanField(default=False, help_text="Enable voice chat"),
                ),
                (
                    "enable_video",
                    models.BooleanField(default=False, help_text="Enable video chat"),
                ),
                (
                    "enable_screen_share",
                    models.BooleanField(
                        default=True, help_text="Enable screen sharing"
                    ),
                ),
                (
                    "enable_cursor_tracking",
                    models.BooleanField(default=True, help_text="Show user cursors"),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional room settings"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, help_text="Room metadata"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_rooms",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        help_text="Associated document",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaboration_rooms",
                        to="documents.document",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaboration_rooms",
                        to="organizations.team",
                    ),
                ),
            ],
            options={
                "db_table": "collaboration_rooms",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="CollaborationSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_token",
                    models.CharField(
                        help_text="Unique session token", max_length=64, unique=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("idle", "Idle"),
                            ("disconnected", "Disconnected"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "user_role",
                    models.CharField(
                        choices=[
                            ("viewer", "Viewer"),
                            ("editor", "Editor"),
                            ("moderator", "Moderator"),
                            ("presenter", "Presenter"),
                        ],
                        default="editor",
                        max_length=20,
                    ),
                ),
                (
                    "connection_id",
                    models.CharField(
                        blank=True, help_text="WebSocket connection ID", max_length=128
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "client_info",
                    models.JSONField(
                        blank=True, default=dict, help_text="Client browser/device info"
                    ),
                ),
                (
                    "session_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Session-specific data"
                    ),
                ),
                ("joined_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_seen", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                (
                    "total_time",
                    models.DurationField(
                        default=datetime.timedelta, help_text="Total time in session"
                    ),
                ),
                (
                    "activity_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of activities performed"
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="collaboration.collaborationroom",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaboration_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "collaboration_sessions",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="CollaborationActivity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("text_insert", "Text Insert"),
                            ("text_delete", "Text Delete"),
                            ("text_format", "Text Format"),
                            ("text_replace", "Text Replace"),
                            ("user_join", "User Join"),
                            ("user_leave", "User Leave"),
                            ("cursor_move", "Cursor Move"),
                            ("selection_change", "Selection Change"),
                            ("comment_add", "Comment Add"),
                            ("comment_reply", "Comment Reply"),
                            ("comment_resolve", "Comment Resolve"),
                            ("document_save", "Document Save"),
                            ("room_settings", "Room Settings Change"),
                            ("permission_change", "Permission Change"),
                        ],
                        max_length=30,
                    ),
                ),
                ("activity_data", models.JSONField(help_text="Activity-specific data")),
                (
                    "operation",
                    models.JSONField(
                        blank=True, help_text="OT operation data", null=True
                    ),
                ),
                (
                    "operation_id",
                    models.CharField(
                        blank=True, help_text="Unique operation ID", max_length=64
                    ),
                ),
                (
                    "parent_operation_id",
                    models.CharField(
                        blank=True, help_text="Parent operation ID", max_length=64
                    ),
                ),
                (
                    "document_version",
                    models.PositiveIntegerField(
                        help_text="Document version at time of activity"
                    ),
                ),
                (
                    "position",
                    models.JSONField(
                        blank=True, help_text="Position in document", null=True
                    ),
                ),
                (
                    "client_timestamp",
                    models.DateTimeField(help_text="Timestamp from client"),
                ),
                (
                    "server_timestamp",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "sequence_number",
                    models.PositiveIntegerField(
                        help_text="Sequence number for ordering"
                    ),
                ),
                (
                    "is_applied",
                    models.BooleanField(
                        default=False, help_text="Whether operation has been applied"
                    ),
                ),
                (
                    "is_broadcast",
                    models.BooleanField(
                        default=False, help_text="Whether activity has been broadcast"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaboration_activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="collaboration.collaborationroom",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="collaboration.collaborationsession",
                    ),
                ),
            ],
            options={
                "db_table": "collaboration_activities",
                "ordering": ["sequence_number", "server_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="CursorPosition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("position", models.JSONField(help_text="Cursor position data")),
                (
                    "selection",
                    models.JSONField(
                        blank=True, help_text="Text selection data", null=True
                    ),
                ),
                (
                    "cursor_color",
                    models.CharField(
                        default="#007bff",
                        help_text="Cursor color hex code",
                        max_length=7,
                    ),
                ),
                (
                    "user_label",
                    models.CharField(
                        blank=True, help_text="Display label for user", max_length=100
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "is_visible",
                    models.BooleanField(
                        default=True,
                        help_text="Whether cursor should be shown to others",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cursor_positions",
                        to="collaboration.collaborationroom",
                    ),
                ),
                (
                    "session",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cursor_position",
                        to="collaboration.collaborationsession",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cursor_positions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "cursor_positions",
            },
        ),
        migrations.AddIndex(
            model_name="collaborationroom",
            index=models.Index(fields=["document"], name="idx_room_document"),
        ),
        migrations.AddIndex(
            model_name="collaborationroom",
            index=models.Index(fields=["team"], name="idx_room_team"),
        ),
        migrations.AddIndex(
            model_name="collaborationroom",
            index=models.Index(fields=["status"], name="idx_room_status"),
        ),
        migrations.AddIndex(
            model_name="collaborationroom",
            index=models.Index(fields=["room_type"], name="idx_room_type"),
        ),
        migrations.AddIndex(
            model_name="collaborationroom",
            index=models.Index(fields=["created_by"], name="idx_room_creator"),
        ),
        migrations.AddIndex(
            model_name="collaborationroom",
            index=models.Index(fields=["last_activity"], name="idx_room_activity"),
        ),
        migrations.AddIndex(
            model_name="collaborationsession",
            index=models.Index(
                fields=["room", "status"], name="idx_session_room_status"
            ),
        ),
        migrations.AddIndex(
            model_name="collaborationsession",
            index=models.Index(fields=["user"], name="idx_session_user"),
        ),
        migrations.AddIndex(
            model_name="collaborationsession",
            index=models.Index(fields=["session_token"], name="idx_session_token"),
        ),
        migrations.AddIndex(
            model_name="collaborationsession",
            index=models.Index(fields=["status"], name="idx_session_status"),
        ),
        migrations.AddIndex(
            model_name="collaborationsession",
            index=models.Index(fields=["last_seen"], name="idx_session_last_seen"),
        ),
        migrations.AlterUniqueTogether(
            name="collaborationsession",
            unique_together={("room", "user")},
        ),
        migrations.AddIndex(
            model_name="collaborationactivity",
            index=models.Index(
                fields=["room", "sequence_number"], name="idx_activity_room_seq"
            ),
        ),
        migrations.AddIndex(
            model_name="collaborationactivity",
            index=models.Index(fields=["session"], name="idx_activity_session"),
        ),
        migrations.AddIndex(
            model_name="collaborationactivity",
            index=models.Index(fields=["activity_type"], name="idx_activity_type"),
        ),
        migrations.AddIndex(
            model_name="collaborationactivity",
            index=models.Index(
                fields=["server_timestamp"], name="idx_activity_timestamp"
            ),
        ),
        migrations.AddIndex(
            model_name="collaborationactivity",
            index=models.Index(fields=["operation_id"], name="idx_activity_operation"),
        ),
        migrations.AddIndex(
            model_name="collaborationactivity",
            index=models.Index(fields=["is_applied"], name="idx_activity_applied"),
        ),
        migrations.AddIndex(
            model_name="cursorposition",
            index=models.Index(fields=["room"], name="idx_cursor_room"),
        ),
        migrations.AddIndex(
            model_name="cursorposition",
            index=models.Index(fields=["session"], name="idx_cursor_session"),
        ),
        migrations.AddIndex(
            model_name="cursorposition",
            index=models.Index(fields=["last_updated"], name="idx_cursor_updated"),
        ),
        migrations.AlterUniqueTogether(
            name="cursorposition",
            unique_together={("room", "user")},
        ),
    ]
