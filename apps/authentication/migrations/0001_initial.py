# Generated by Django 5.2.6 on 2025-09-12 05:57

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("success", models.BooleanField()),
                ("failure_reason", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "auth_login_attempts",
                "indexes": [
                    models.Index(
                        fields=["email", "-created_at"], name="idx_login_email_created"
                    ),
                    models.Index(
                        fields=["ip_address", "-created_at"],
                        name="idx_login_attempts_ip_created",
                    ),
                    models.Index(
                        fields=["-created_at"], name="idx_login_attempts_created_at"
                    ),
                    models.Index(fields=["success"], name="idx_login_attempts_success"),
                ],
            },
        ),
        migrations.CreateModel(
            name="EmailVerification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("token", models.CharField(max_length=100, unique=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_email_verifications",
                "indexes": [
                    models.Index(fields=["token"], name="idx_email_verification_token"),
                    models.Index(
                        fields=["email", "is_verified"], name="idx_email_verified"
                    ),
                    models.Index(
                        fields=["expires_at"], name="idx_email_verification_expires"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("token", models.CharField(max_length=100, unique=True)),
                ("is_used", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="password_reset_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_password_reset_tokens",
                "indexes": [
                    models.Index(fields=["token"], name="idx_password_reset_token"),
                    models.Index(
                        fields=["user", "is_used"], name="idx_password_reset_user_used"
                    ),
                    models.Index(
                        fields=["expires_at"], name="idx_password_reset_expires"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RefreshToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("token", models.TextField()),
                ("device_info", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_used", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refresh_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth_refresh_tokens",
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="idx_refresh_tokens_user_active",
                    ),
                    models.Index(fields=["token"], name="idx_refresh_tokens_token"),
                    models.Index(
                        fields=["-created_at"], name="idx_refresh_tokens_created_at"
                    ),
                    models.Index(
                        fields=["expires_at"], name="idx_refresh_tokens_expires_at"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("avatar_url", models.URLField(blank=True, max_length=500, null=True)),
                ("user_timezone", models.CharField(default="UTC", max_length=50)),
                ("preferences", models.JSONField(blank=True, default=dict)),
                ("last_active", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_profile",
                "indexes": [
                    models.Index(fields=["user"], name="idx_users_profile_user_id"),
                    models.Index(
                        fields=["-last_active"], name="idx_users_profile_last_active"
                    ),
                    models.Index(
                        fields=["-created_at"], name="idx_users_profile_created_at"
                    ),
                ],
            },
        ),
    ]
