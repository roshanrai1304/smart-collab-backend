# Generated by Django 5.2.6 on 2025-09-23 05:54

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import apps.files.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("documents", "0001_initial"),
        ("organizations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FileUpload",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "original_name",
                    models.CharField(help_text="Original filename", max_length=255),
                ),
                (
                    "file_name",
                    models.CharField(help_text="Stored filename", max_length=255),
                ),
                (
                    "file",
                    models.FileField(
                        max_length=500, upload_to=apps.files.models.upload_to_path
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("document", "Document"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("archive", "Archive"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="File description"),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, help_text="File tags"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional metadata"
                    ),
                ),
                ("is_image", models.BooleanField(default=False)),
                ("image_width", models.PositiveIntegerField(blank=True, null=True)),
                ("image_height", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "upload_status",
                    models.CharField(
                        choices=[
                            ("uploading", "Uploading"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="uploading",
                        max_length=20,
                    ),
                ),
                (
                    "processing_info",
                    models.JSONField(
                        blank=True, default=dict, help_text="Processing status info"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Public files can be accessed by all team members",
                    ),
                ),
                (
                    "virus_scan_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("clean", "Clean"),
                            ("infected", "Infected"),
                            ("error", "Error"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        help_text="Document this file is attached to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="documents.document",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="organizations.team",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="uploaded_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "file_uploads",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FileShare",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "share_token",
                    models.CharField(
                        help_text="Unique share token", max_length=64, unique=True
                    ),
                ),
                (
                    "share_type",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("download", "Download"),
                            ("edit", "Edit"),
                        ],
                        default="view",
                        max_length=20,
                    ),
                ),
                ("password_protected", models.BooleanField(default=False)),
                ("password_hash", models.CharField(blank=True, max_length=128)),
                (
                    "max_downloads",
                    models.PositiveIntegerField(
                        blank=True, help_text="Maximum number of downloads", null=True
                    ),
                ),
                ("download_count", models.PositiveIntegerField(default=0)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="Share expiration time", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("access_count", models.PositiveIntegerField(default=0)),
                (
                    "access_log",
                    models.JSONField(
                        blank=True, default=list, help_text="Access log entries"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="files.fileupload",
                    ),
                ),
            ],
            options={
                "db_table": "file_shares",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FilePermission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("read", "Read Only"),
                            ("write", "Read & Write"),
                            ("admin", "Admin"),
                        ],
                        max_length=10,
                    ),
                ),
                ("granted_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notes about this permission grant"
                    ),
                ),
                (
                    "granted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="granted_file_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permissions",
                        to="files.fileupload",
                    ),
                ),
            ],
            options={
                "db_table": "file_permissions",
            },
        ),
        migrations.AddIndex(
            model_name="fileupload",
            index=models.Index(fields=["team", "file_type"], name="idx_file_team_type"),
        ),
        migrations.AddIndex(
            model_name="fileupload",
            index=models.Index(fields=["uploaded_by"], name="idx_file_uploaded_by"),
        ),
        migrations.AddIndex(
            model_name="fileupload",
            index=models.Index(fields=["document"], name="idx_file_document"),
        ),
        migrations.AddIndex(
            model_name="fileupload",
            index=models.Index(fields=["created_at"], name="idx_file_created_at"),
        ),
        migrations.AddIndex(
            model_name="fileupload",
            index=models.Index(fields=["mime_type"], name="idx_file_mime_type"),
        ),
        migrations.AddIndex(
            model_name="fileupload",
            index=models.Index(fields=["upload_status"], name="idx_file_status"),
        ),
        migrations.AddIndex(
            model_name="fileshare",
            index=models.Index(fields=["share_token"], name="idx_file_share_token"),
        ),
        migrations.AddIndex(
            model_name="fileshare",
            index=models.Index(fields=["file"], name="idx_file_share_file"),
        ),
        migrations.AddIndex(
            model_name="fileshare",
            index=models.Index(fields=["expires_at"], name="idx_file_share_expires"),
        ),
        migrations.AddIndex(
            model_name="fileshare",
            index=models.Index(fields=["created_by"], name="idx_file_share_created"),
        ),
        migrations.AddIndex(
            model_name="filepermission",
            index=models.Index(fields=["file", "user"], name="idx_file_perm_file_user"),
        ),
        migrations.AddIndex(
            model_name="filepermission",
            index=models.Index(fields=["user"], name="idx_file_perm_user"),
        ),
        migrations.AddIndex(
            model_name="filepermission",
            index=models.Index(fields=["granted_by"], name="idx_file_perm_granted"),
        ),
        migrations.AlterUniqueTogether(
            name="filepermission",
            unique_together={("file", "user")},
        ),
    ]
